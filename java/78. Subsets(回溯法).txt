public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        List<Integer> list=new ArrayList<Integer>();
        
        res.add(list);
        
        Arrays.sort(nums);
        for(int i=1;i<=nums.length;i++)
        {
            list.clear();
            dfs(nums,0,i,list,res);
        }
        return res;
    }
    public void dfs(int []nums,int start,int number,List<Integer> list,List<List<Integer>> res)
    {
        if(list.size()==number)
        {        
            res.add(new ArrayList<Integer>(list));
            return;
        }
        for(int i=start;i<nums.length;i++)
        {
            list.add(nums[i]); 
            dfs(nums,i+1,number,list,res);
            list.remove(list.size()-1);
        }
    }
}