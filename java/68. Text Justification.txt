public class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        
        List<String> list =new ArrayList<String>();
        
        for(int i=0,w;i<words.length;i=w)
        {
            int len=-1;
            for(w=i;w<words.length&&len+words[w].length()+1<=maxWidth;w++)
            {
                len+=words[w].length()+1;
            }
            int space=1;
            int extra=0;
            if((i+1)!=w&&w!=words.length)
            {
                space=(maxWidth-len)/(w-i-1)+1;
                extra=(maxWidth-len)%(w-i-1);
            }
            StringBuffer sb=new StringBuffer(words[i]);
            for(int j=i+1;j<w;j++)
            {
                int s=space;
                while(s-->0)sb.append(' ');
                if(extra-->0)sb.append(' ');
                sb.append(words[j]);
            }
            int rightspace=maxWidth-sb.length();
            while(rightspace-->0)sb.append(' ');
            String str=sb.toString();
            list.add(str);
        }
        return list;
    }
}