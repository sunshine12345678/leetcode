public class Solution {
    public void solveSudoku(char[][] board) {
        
        isSolveSudoku(board);
    }
    
    public boolean isSolveSudoku(char [][]board)
    {
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[i].length;j++)
            {
                if(board[i][j]=='.')
                {
                    for(char z='1';z<='9';z++)
                    {
                        board[i][j]=z;
                        if(isValid(board,i,j)&&isSolveSudoku(board))
                        return true;
                        board[i][j]='.';
                    }
                    return false;
                }
            }
        }
        return true;
    }
    public boolean isValid(char [][]board,int x,int y)
    {
        for(int i=0;i<9;i++)
        {
            if(y!=i&&board[x][y]==board[x][i])
            return false;
        }
        for(int i=0;i<9;i++)
        {
            if(x!=i&&board[x][y]==board[i][y])
            return false;
        }
        
        int x1=x/3*3;
        int y1=y/3*3;
        for(int i=x1;i<x1+3;i++)
        {
            for(int j=y1;j<y1+3;j++)
            {
                if((x!=i||y!=j)&&board[i][j]==board[x][y])
                return false;
            }
        }
        return true;
    }
}