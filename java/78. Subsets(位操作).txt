
//对于数组[1,2,3]，可以用一个下标0和1表示是否选择该数字，0表示未选择，1表示选中，那么每一组3个0和1的组合表示一种选择，3位共有8种选择，分别是： 
// 000 对应[] 
// 001 对应[3] 
// 010 对应[2] 
// 011 对应[2,3] 
// 100 … 
// 101 
// 110 
// 111 
// 那么上面为1的位表示数组中该位被选中。 
// 那么只需要遍历0到1<< length中的数，判断每一个数中有那几位为1，为1的那几位即会构成一个子集中的一个元素。

public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        
        Arrays.sort(nums);
        
        int number=1<<nums.length;
        
        for(int i=0;i<number;i++)
        {
            List<Integer> list=new ArrayList<Integer>();
           for(int j=0;j<nums.length;j++)
           {
               if((i&(1<<j))!=0)
               {
                   list.add(nums[j]);
               }
           }
           res.add(list);
        }
        return res;
    }
   
}