public class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> res = new ArrayList<List<Integer>>();
       
        vGet(candidates,target,0,0,list,res);
        return res;
    }
    
    public void vGet(int[] candidates, int target,int sum,int index,List<Integer> list, List<List<Integer>> res)
    {
        if(sum==target)
        {
            res.add(new ArrayList<>(list));
            return;
        }
        else if(sum>target)
        {
            return;
        }
        else
        {
            for(int i=index;i<candidates.length;i++)
            {
                list.add(candidates[i]);
                vGet(candidates,target,sum+candidates[i],i+1,list,res);
                list.remove(list.size()-1);
                while(i<candidates.length-1&&candidates[i]==candidates[i+1])i++;
            }
        }
    }
}