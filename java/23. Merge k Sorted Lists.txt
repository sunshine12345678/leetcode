/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        int len=lists.length;
        if(len==0||lists==null)
        return null;
      
        if(len==1)
        return lists[0];
        
        while(len>1)
        {
            int temp=(len+1)/2;
            
            for(int i=0;i<len/2;i++)
            {
                lists[i]=merge(lists[i],lists[i+temp]);
            }
            len=temp;
        }
        return lists[0];
    }
    public ListNode merge(ListNode l1,ListNode l2)
    {
        
    
        ListNode temp=new ListNode(0);
        ListNode temp1=temp;
        
        while(l1!=null&&l2!=null)
        {
            if(l1.val<l2.val)
            {
                temp.next=new ListNode(l1.val);
                l1=l1.next;
                temp=temp.next;
            }
            else
            {
                temp.next=new ListNode(l2.val);
                l2=l2.next;
                temp=temp.next;
            }
        }
        if(l1!=null)
        temp.next=l1;
        if(l2!=null)
        temp.next=l2;
        
        return temp1.next;
    }
}