/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //二叉搜索树（中序为连续的数字）中有两个结点互换位置
public class Solution {
    
    TreeNode mistake1,mistake2;
    TreeNode pre;
    public void recoverTree(TreeNode root) {
        recover(root);
        if(mistake1!=null&&mistake2!=null)
        {
            int temp=mistake1.val;
            mistake1.val=mistake2.val;
            mistake2.val=temp;
        }
    }
    public void recover(TreeNode root)
    {
        if(root==null)
        return;
        
        if(root.left!=null)
        {
            recover(root.left);
        }
        
        if(pre!=null&&pre.val>root.val)
        {
            if(mistake1==null)
            {
                mistake1=pre;
                mistake2=root;
            }else{
                mistake2=root;
            }
        }
        pre=root;
        if(root.right!=null)
        {
            recover(root.right);
        }
    }
}